name: GitHub Issue to Jira Sync from Form

on:
  issues:
    types: [opened]

jobs:
  create_jira_issue:
    runs-on: ubuntu-latest
    steps:
      # 1. Ïù¥Ïäà Î≥∏Î¨∏ÏóêÏÑú Ìèº ÏûÖÎ†•Í∞í Í∑∏ÎåÄÎ°ú Ï∂îÏ∂ú
      - name: Parse Issue Form Body
        id: parse_form
        run: |
          body="${{ github.event.issue.body }}"
          
          # Í∞Å Ìï≠Î™©Ïùò Ïã§Ï†ú ÏûÖÎ†•Í∞íÏùÑ Ï∂îÏ∂ú
          issuetype=$(echo "$body" | grep -A 2 "### ‚ö°Ô∏è Ïù¥Ïäà Ïú†Ìòï" | tail -n 1 | tr -d '\r')
          epic_number=$(echo "$body" | grep -A 2 "### üéüÔ∏è ÏÉÅÏúÑ ÏóêÌîΩ Number" | tail -n 1 | tr -d '\r')
          issue_label=$(echo "$body" | grep -A 2 "### üè∑Ô∏è Î†àÏù¥Î∏î" | tail -n 1 | tr -d '\r')

          echo "issuetype=$issuetype" >> $GITHUB_OUTPUT
          echo "epic_number=$epic_number" >> $GITHUB_OUTPUT
          echo "issue_label=$issue_label" >> $GITHUB_OUTPUT

     # 2. Jira ÌïÑÎìú JSONÏùÑ ÎèôÏ†ÅÏúºÎ°ú ÏÉùÏÑ± (ÏàòÏ†ïÎê®)
      - name: Construct Jira Fields
        id: construct_fields
        run: |
          epic_key_raw="${{ steps.parse_form.outputs.epic_number }}"
          labels_raw="${{ steps.parse_form.outputs.issue_label }}"

          json_fields='{}'

          # ÏÇ¨Ïö©ÏûêÍ∞Ä ÏóêÌîΩ Î≤àÌò∏Î•º ÏûÖÎ†•ÌñàÏùÑ ÎïåÎßå parent ÌïÑÎìúÎ•º JSONÏóê Ï∂îÍ∞Ä
          if [[ -n "$epic_key_raw" && "$epic_key_raw" != "_No response_" ]]; then
            # üëá jq Î™ÖÎ†πÏñ¥Ïóê -c ÏòµÏÖòÏùÑ Ï∂îÍ∞ÄÌïòÏó¨ Í≤∞Í≥ºÎ•º Ìïú Ï§ÑÎ°ú ÎßåÎì≠ÎãàÎã§.
            json_fields=$(echo "$json_fields" | jq -c --arg key "$epic_key_raw" '.parent = {"key": $key}')
          fi

          # ÏÇ¨Ïö©ÏûêÍ∞Ä Î†àÏù¥Î∏îÏùÑ ÏûÖÎ†•ÌñàÏùÑ ÎïåÎßå labels ÌïÑÎìúÎ•º JSONÏóê Ï∂îÍ∞Ä
          if [[ -n "$labels_raw" && "$labels_raw" != "_No response_" ]]; then
            labels_json_array=$(echo "$labels_raw" | jq -R 'split(",") | map(. | ltrim | rtrim) | map(select(length > 0))')
            # üëá jq Î™ÖÎ†πÏñ¥Ïóê -c ÏòµÏÖòÏùÑ Ï∂îÍ∞ÄÌïòÏó¨ Í≤∞Í≥ºÎ•º Ìïú Ï§ÑÎ°ú ÎßåÎì≠ÎãàÎã§.
            json_fields=$(echo "$json_fields" | jq -c --argjson labels "$labels_json_array" '.labels = $labels')
          fi

          echo "json=$json_fields" >> $GITHUB_OUTPUT
      # 3. Jira Î°úÍ∑∏Ïù∏
      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      # 4. Jira Ïù¥Ïäà ÏÉùÏÑ±
      - name: Create Jira Issue
        uses: atlassian/gajira-create@v3
        with:
          project: SCRUM
          issuetype: ${{ steps.parse_form.outputs.issuetype }}
          summary: ${{ github.event.issue.title }}
          description: ${{ github.event.issue.body }}
          fields: ${{ steps.construct_fields.outputs.json }}
